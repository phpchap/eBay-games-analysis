<?php

/**
 * BaseEbayGame
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $guid
 * @property string $title
 * @property string $block_title
 * @property string $link
 * @property text $description
 * @property int $current_price
 * @property timestamp $end_time
 * @property int $bid_count
 * @property int $postage_packing_fee
 * @property varchar $profile_name
 * @property varchar $profile_url
 * @property int $feedback_score
 * @property tinyint $title_processed
 * @property varchar $platform
 * @property enum $status
 * 
 * @method string    getGuid()                Returns the current record's "guid" value
 * @method string    getTitle()               Returns the current record's "title" value
 * @method string    getBlockTitle()          Returns the current record's "block_title" value
 * @method string    getLink()                Returns the current record's "link" value
 * @method text      getDescription()         Returns the current record's "description" value
 * @method int       getCurrentPrice()        Returns the current record's "current_price" value
 * @method timestamp getEndTime()             Returns the current record's "end_time" value
 * @method int       getBidCount()            Returns the current record's "bid_count" value
 * @method int       getPostagePackingFee()   Returns the current record's "postage_packing_fee" value
 * @method varchar   getProfileName()         Returns the current record's "profile_name" value
 * @method varchar   getProfileUrl()          Returns the current record's "profile_url" value
 * @method int       getFeedbackScore()       Returns the current record's "feedback_score" value
 * @method tinyint   getTitleProcessed()      Returns the current record's "title_processed" value
 * @method varchar   getPlatform()            Returns the current record's "platform" value
 * @method enum      getStatus()              Returns the current record's "status" value
 * @method EbayGame  setGuid()                Sets the current record's "guid" value
 * @method EbayGame  setTitle()               Sets the current record's "title" value
 * @method EbayGame  setBlockTitle()          Sets the current record's "block_title" value
 * @method EbayGame  setLink()                Sets the current record's "link" value
 * @method EbayGame  setDescription()         Sets the current record's "description" value
 * @method EbayGame  setCurrentPrice()        Sets the current record's "current_price" value
 * @method EbayGame  setEndTime()             Sets the current record's "end_time" value
 * @method EbayGame  setBidCount()            Sets the current record's "bid_count" value
 * @method EbayGame  setPostagePackingFee()   Sets the current record's "postage_packing_fee" value
 * @method EbayGame  setProfileName()         Sets the current record's "profile_name" value
 * @method EbayGame  setProfileUrl()          Sets the current record's "profile_url" value
 * @method EbayGame  setFeedbackScore()       Sets the current record's "feedback_score" value
 * @method EbayGame  setTitleProcessed()      Sets the current record's "title_processed" value
 * @method EbayGame  setPlatform()            Sets the current record's "platform" value
 * @method EbayGame  setStatus()              Sets the current record's "status" value
 * 
 * @package    ebay-games
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEbayGame extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ebay_games');
        $this->hasColumn('guid', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('block_title', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('link', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('description', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('current_price', 'int', 11, array(
             'type' => 'int',
             'length' => 11,
             ));
        $this->hasColumn('end_time', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('bid_count', 'int', 11, array(
             'type' => 'int',
             'length' => 11,
             ));
        $this->hasColumn('postage_packing_fee', 'int', 11, array(
             'type' => 'int',
             'length' => 11,
             ));
        $this->hasColumn('profile_name', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('profile_url', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('feedback_score', 'int', 11, array(
             'type' => 'int',
             'length' => 11,
             ));
        $this->hasColumn('title_processed', 'tinyint', 1, array(
             'type' => 'tinyint',
             'length' => 1,
             ));
        $this->hasColumn('platform', 'varchar', 20, array(
             'type' => 'varchar',
             'length' => 20,
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'live',
              1 => 'ended',
             ),
             'default' => 'live',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             ));
        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($sluggable0);
        $this->actAs($timestampable0);
    }
}